{"ast":null,"code":"var _jsxFileName = \"/Users/stephenkelly/chessrush/client/src/components/TacticSession.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useGameState, useGameUpdateState } from \"../utils/GameContext\";\nimport { Container, Modal, Col, Card, ListGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport TacticBoard from \"./TacticBoard\";\nimport chessmove from \"../audio/chessmove.wav\";\nimport solve from \"../audio/puzzle solve.wav\";\nimport wrongmove from \"../audio/incorrect move.wav\";\nimport axios from \"axios\";\nimport Timer from \"./Timer\";\nimport { getSideToPlayFromFen } from \"../utils/chessTactics\";\nimport { useQuery, useMutation } from '@apollo/client';\nimport { CREATE_VOTE } from '../utils/mutations';\nimport { QUERY_SCORE } from \"../utils/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TacticSession = () => {\n  _s();\n\n  const [chessboardSize, setChessboardSize] = useState(undefined);\n  const [score, SetScore] = useState(0);\n  const [key, setKey] = useState(Date.now());\n  const [tactic, setTactic] = useState({});\n  const {\n    show\n  } = useGameState();\n  const {\n    updateShow\n  } = useGameUpdateState();\n  const {\n    gameOver\n  } = useGameState();\n  const {\n    updateGameOver\n  } = useGameUpdateState();\n  const {\n    reset\n  } = useGameUpdateState();\n  const [loading, setLoading] = useState(true);\n  const [walletAddress, setWalletAddress] = useState(null);\n  console.log(walletAddress);\n  const adding = {\n    \"wallet\": walletAddress\n  };\n  const {\n    data\n  } = useQuery(QUERY_SCORE, {\n    variables: { ...adding\n    }\n  });\n  console.log(data.score.highscore); // console.log(this.state);\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const {\n        solana\n      } = window;\n\n      if (solana) {\n        if (solana.isPhantom) {\n          console.log(\"Phantom wallet found!\");\n          const response = await solana.connect({\n            onlyIfTrusted: true\n          });\n          console.log(\"Connected with Public Key:\", response.publicKey.toString());\n          /*\n           * Set the user's publicKey in state to be used later!\n           */\n\n          setWalletAddress(response.publicKey.toString());\n        }\n      } else {\n        alert(\"Solana object not found! Get a Phantom Wallet ðŸ‘»\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  async function getPuzzle() {\n    let data = await axios(\"https://chess-puzzle-server.herokuapp.com/\").then(data => {\n      const payload = data.data;\n      console.log(payload);\n      return payload;\n    });\n    setTactic(data);\n    setInterval(() => {\n      setLoading(false);\n    }, 3000);\n  }\n\n  useEffect(() => {\n    getPuzzle();\n  }, []);\n  useEffect(() => {\n    if (!loading) {\n      function handleResize() {\n        const display = document.getElementsByClassName(\"container\")[0];\n        const displayDiv = display.getElementsByTagName(\"div\")[0];\n        const chessBoardContainer = displayDiv.getElementsByTagName(\"div\")[0];\n        chessBoardContainer.setAttribute(\"style\", \"position: relative; display: flex; align-items: center; justify-content: center;\");\n\n        if (display.offsetWidth >= 1140) {\n          setChessboardSize(display.offsetWidth * 0.59);\n        }\n\n        if (display.offsetWidth >= 960 && display.offsetWidth < 1140) {\n          setChessboardSize(display.offsetWidth * 0.69);\n        }\n\n        if (display.offsetWidth >= 720 && display.offsetWidth < 960) {\n          setChessboardSize(display.offsetWidth * 0.82);\n        }\n\n        if (display.offsetWidth >= 720 && display.offsetWidth < 960) {\n          setChessboardSize(display.offsetWidth * 0.8);\n        }\n\n        if (display.offsetWidth <= 540) {\n          setChessboardSize(display.offsetWidth);\n        }\n      }\n\n      window.addEventListener(\"resize\", handleResize);\n      handleResize();\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }\n  }, [loading]);\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n    };\n\n    window.addEventListener(\"load\", onLoad);\n    return () => window.removeEventListener(\"load\", onLoad);\n  }, []);\n  const scores1 = 17;\n  const [createVote, {\n    error\n  }] = useMutation(CREATE_VOTE);\n\n  async function solutionFunction() {\n    let audio = new Audio(solve);\n    audio.play();\n    setTimeout(() => {\n      audio.pause();\n    }, 800);\n    SetScore(score + 1);\n    console.log(scores1); // try {\n    //   await createVote({\n    //     variables: { wallet: walletAddress, scores1 },\n    //   });\n    // } catch (err) {\n    //   console.error(err);\n    // }\n\n    await getPuzzle();\n    setKey(Date.now());\n  }\n\n  async function correctFunction() {\n    let audio = new Audio(chessmove);\n    audio.play();\n    setTimeout(() => {\n      audio.pause();\n    }, 200);\n  }\n\n  async function incorrectFunction() {\n    let audio = new Audio(wrongmove);\n    audio.play();\n    setTimeout(() => {\n      audio.pause();\n    }, 1000);\n    SetScore(score - 1);\n    await getPuzzle();\n    setKey(Date.now());\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader loader-inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"mainContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"chessBody\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            className: \"chessContainer\",\n            children: /*#__PURE__*/_jsxDEV(TacticBoard, {\n              tactic: tactic,\n              boardWidth: chessboardSize,\n              onCorrect: correctFunction,\n              onIncorrect: incorrectFunction,\n              onSolve: solutionFunction\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), !gameOver && /*#__PURE__*/_jsxDEV(Col, {\n          className: \"chessHeader\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"cardShadow\",\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"Score: \", score]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: getSideToPlayFromFen(tactic.fen) === \"b\" ? \"White to Play\" : \"Black to Play\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_s(TacticSession, \"8Y6SCjZaMur8dqB1a8CFhurwc2Q=\", false, function () {\n  return [useGameState, useGameUpdateState, useGameState, useGameUpdateState, useGameUpdateState, useQuery, useMutation];\n});\n\n_c = TacticSession;\nexport default TacticSession;\n\nvar _c;\n\n$RefreshReg$(_c, \"TacticSession\");","map":{"version":3,"names":["React","useState","useEffect","useGameState","useGameUpdateState","Container","Modal","Col","Card","ListGroup","Link","TacticBoard","chessmove","solve","wrongmove","axios","Timer","getSideToPlayFromFen","useQuery","useMutation","CREATE_VOTE","QUERY_SCORE","TacticSession","chessboardSize","setChessboardSize","undefined","score","SetScore","key","setKey","Date","now","tactic","setTactic","show","updateShow","gameOver","updateGameOver","reset","loading","setLoading","walletAddress","setWalletAddress","console","log","adding","data","variables","highscore","checkIfWalletIsConnected","solana","window","isPhantom","response","connect","onlyIfTrusted","publicKey","toString","alert","error","getPuzzle","then","payload","setInterval","handleResize","display","document","getElementsByClassName","displayDiv","getElementsByTagName","chessBoardContainer","setAttribute","offsetWidth","addEventListener","removeEventListener","onLoad","scores1","createVote","solutionFunction","audio","Audio","play","setTimeout","pause","correctFunction","incorrectFunction","textAlign","fen"],"sources":["/Users/stephenkelly/chessrush/client/src/components/TacticSession.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useGameState, useGameUpdateState } from \"../utils/GameContext\";\nimport { Container, Modal, Col, Card, ListGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport TacticBoard from \"./TacticBoard\";\nimport chessmove from \"../audio/chessmove.wav\";\nimport solve from \"../audio/puzzle solve.wav\";\nimport wrongmove from \"../audio/incorrect move.wav\";\nimport axios from \"axios\";\nimport Timer from \"./Timer\";\nimport { getSideToPlayFromFen } from \"../utils/chessTactics\";\nimport { useQuery, useMutation } from '@apollo/client';\nimport { CREATE_VOTE } from '../utils/mutations';\nimport { QUERY_SCORE } from \"../utils/queries\";\n\nconst TacticSession = () => {\n  const [chessboardSize, setChessboardSize] = useState(undefined);\n  const [score, SetScore] = useState(0);\n  const [key, setKey] = useState(Date.now());\n  const [tactic, setTactic] = useState({});\n  const { show } = useGameState();\n  const { updateShow } = useGameUpdateState();\n  const { gameOver } = useGameState();\n  const { updateGameOver } = useGameUpdateState();\n  const { reset } = useGameUpdateState();\n\n  \n  const [loading, setLoading] = useState(true);\n\n  const [walletAddress, setWalletAddress] = useState(null);\n  console.log(walletAddress);\n\n  const adding = {\"wallet\":walletAddress}\n\n  const { data } = useQuery(QUERY_SCORE, {\n    variables: { ...adding }\n  });\n\n  console.log(data.score.highscore);\n\n  // console.log(this.state);\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const { solana } = window;\n\n      if (solana) {\n        if (solana.isPhantom) {\n          console.log(\"Phantom wallet found!\");\n          const response = await solana.connect({ onlyIfTrusted: true });\n          console.log(\n            \"Connected with Public Key:\",\n            response.publicKey.toString()\n          );\n\n          /*\n           * Set the user's publicKey in state to be used later!\n           */\n          setWalletAddress(response.publicKey.toString());\n          \n        }\n      } else {\n        alert(\"Solana object not found! Get a Phantom Wallet ðŸ‘»\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  async function getPuzzle() {\n    let data = await axios(\"https://chess-puzzle-server.herokuapp.com/\").then(\n      (data) => {\n        const payload = data.data;\n        console.log(payload);\n\n        return payload;\n      }\n    );\n\n    setTactic(data);\n\n    setInterval(() => {\n      setLoading(false);\n    }, 3000);\n  }\n\n  useEffect(() => {\n    getPuzzle();\n  }, []);\n\n  useEffect(() => {\n    if (!loading) {\n      function handleResize() {\n        const display = document.getElementsByClassName(\"container\")[0];\n        const displayDiv = display.getElementsByTagName(\"div\")[0];\n        const chessBoardContainer = displayDiv.getElementsByTagName(\"div\")[0];\n\n        chessBoardContainer.setAttribute(\n          \"style\",\n          \"position: relative; display: flex; align-items: center; justify-content: center;\"\n        );\n\n        if (display.offsetWidth >= 1140) {\n          setChessboardSize(display.offsetWidth * 0.59);\n        }\n\n        if (display.offsetWidth >= 960 && display.offsetWidth < 1140) {\n          setChessboardSize(display.offsetWidth * 0.69);\n        }\n\n        if (display.offsetWidth >= 720 && display.offsetWidth < 960) {\n          setChessboardSize(display.offsetWidth * 0.82);\n        }\n\n        if (display.offsetWidth >= 720 && display.offsetWidth < 960) {\n          setChessboardSize(display.offsetWidth * 0.8);\n        }\n\n        if (display.offsetWidth <= 540) {\n          setChessboardSize(display.offsetWidth);\n        }\n      }\n\n      window.addEventListener(\"resize\", handleResize);\n      handleResize();\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }\n  }, [loading]);\n\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n    };\n    window.addEventListener(\"load\", onLoad);\n    return () => window.removeEventListener(\"load\", onLoad);\n  }, []);\n\n\n  const scores1 = 17;\n  const [createVote, { error }] = useMutation(CREATE_VOTE);\n\n  async function solutionFunction() {\n    let audio = new Audio(solve);\n    audio.play();\n    setTimeout(() => {\n      audio.pause();\n    }, 800);\n    SetScore(score + 1);\n    console.log(scores1);\n    // try {\n    //   await createVote({\n    //     variables: { wallet: walletAddress, scores1 },\n        \n    //   });\n    // } catch (err) {\n    //   console.error(err);\n    // }\n    await getPuzzle();\n    setKey(Date.now());\n  }\n\n  async function correctFunction() {\n    let audio = new Audio(chessmove);\n    audio.play();\n    setTimeout(() => {\n      audio.pause();\n    }, 200);\n  }\n\n  async function incorrectFunction() {\n    let audio = new Audio(wrongmove);\n    audio.play();\n    setTimeout(() => {\n      audio.pause();\n    }, 1000);\n    SetScore(score - 1);\n    await getPuzzle();\n    setKey(Date.now());\n  }\n\n  return (\n    <>\n      {loading ? (\n        <div className=\"loader-wrapper\">\n          <div className=\"loader\">\n            <div className=\"loader loader-inner\"></div>\n          </div>\n        </div>\n      ) : (\n        <>\n          <Container className=\"mainContainer\">\n            <Col className=\"chessBody\">\n              <Container className=\"chessContainer\">\n                <TacticBoard\n                  key={key}\n                  tactic={tactic}\n                  boardWidth={chessboardSize}\n                  onCorrect={correctFunction}\n                  onIncorrect={incorrectFunction}\n                  onSolve={solutionFunction}\n                />\n              </Container>\n            </Col>\n\n            {!gameOver && (\n              <Col className=\"chessHeader\">\n                <Card className=\"cardShadow\">\n                  <ListGroup>\n                    <ListGroup.Item>\n                      {/* <Timer time={{ hours: 0, minutes: 0, seconds: 10 }} /> */}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <div style={{ textAlign: \"center\" }}>\n                        <h2>Score: {score}</h2>\n                        <h4>\n                          {getSideToPlayFromFen(tactic.fen) === \"b\"\n                            ? \"White to Play\"\n                            : \"Black to Play\"}\n                        </h4>\n                      </div>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Card>\n              </Col>\n            )}\n\n            {/* <Modal\n              show={show}\n              onHide={updateShow}\n              backdrop=\"static\"\n              keyboard={false}\n              centered\n            >\n              <Modal.Header>\n                <Modal.Title style={{ margin: \"auto\", fontSize: \"2.5rem\" }}>\n                  Game Over!\n                </Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <h2>Score: {score}</h2>\n              </Modal.Body>\n              <Modal.Footer>\n                <Link onClick={reset} className=\"btn btn-primary\" to=\"/\">\n                  Return to menu\n                </Link>\n              </Modal.Footer>\n            </Modal> */}\n          </Container>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default TacticSession;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}