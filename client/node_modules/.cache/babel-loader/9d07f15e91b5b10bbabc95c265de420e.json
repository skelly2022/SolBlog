{"ast":null,"code":"var _jsxFileName = \"/Users/stephenkelly/chessrush/client/src/components/TacticMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery } from '@apollo/client';\nimport { QUERY_SCORES } from \"../utils/queries\";\nimport ScoreList from '../components/ScoreList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TEST_WALLETS = [{\n  wallet: \"asparagus\",\n  score: \"vegetables\"\n}, {\n  wallet: \"asparagus\",\n  score: \"vegetables\"\n}, {\n  wallet: \"asparagus\",\n  score: \"vegetables\"\n}, {\n  wallet: \"asparagus\",\n  score: \"vegetables\"\n}, {\n  wallet: \"asparagus\",\n  score: \"vegetables\"\n}];\n\nconst TacticMenu = () => {\n  _s();\n\n  // State\n  const [walletAddress, setWalletAddress] = useState(null);\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_SCORES);\n  const scores = (data === null || data === void 0 ? void 0 : data.scores) || [];\n  console.log(scores); // Actions\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const {\n        solana\n      } = window;\n\n      if (solana) {\n        if (solana.isPhantom) {\n          console.log(\"Phantom wallet found!\");\n          const response = await solana.connect({\n            onlyIfTrusted: true\n          });\n          console.log(\"Connected with Public Key:\", response.publicKey.toString());\n          /*\n           * Set the user's publicKey in state to be used later!\n           */\n\n          setWalletAddress(response.publicKey.toString());\n        }\n      } else {\n        alert(\"Solana object not found! Get a Phantom Wallet ðŸ‘»\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const connectWallet = async () => {\n    const {\n      solana\n    } = window;\n\n    if (solana) {\n      const response = await solana.connect();\n      console.log(\"Connected with Public Key:\", response.publicKey.toString());\n      setWalletAddress(response.publicKey.toString());\n    }\n  };\n\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"cta-button connect-wallet-button\",\n    onClick: connectWallet,\n    children: \"Connect to Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n\n  const renderConnectedButton = () => /*#__PURE__*/_jsxDEV(\"a\", {\n    style: {\n      width: \"30%\"\n    },\n    className: \"btn btn-primary\",\n    href: \"/beginner\",\n    children: \"Start\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n\n  const renderConnectedWallet = () => /*#__PURE__*/_jsxDEV(\"h4\", {\n    className: \"connectedWallet\",\n    children: [\"Connected Wallet : \", walletAddress]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n\n  const renderHighScoresContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gif-grid\",\n    children: TEST_WALLETS.map(wallet => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gif-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: wallet.wallet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: wallet.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, wallet, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this); // UseEffects\n\n\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n    };\n\n    window.addEventListener(\"load\", onLoad);\n    return () => window.removeEventListener(\"load\", onLoad);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flexDirection: \"inline\",\n      height: \"80vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Intro\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"introText\",\n        children: \"Puzzle Rush\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), !walletAddress && renderNotConnectedContainer(), walletAddress && renderConnectedButton(), walletAddress && renderConnectedWallet()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Intro2\",\n      children: /*#__PURE__*/_jsxDEV(ScoreList, {\n        scores: scores,\n        title: \"Some Feed for Thought(s)...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TacticMenu, \"pABQ+02DQw8od81kk0+IxxbDcfs=\", false, function () {\n  return [useQuery];\n});\n\n_c = TacticMenu;\nexport default TacticMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"TacticMenu\");","map":{"version":3,"names":["React","useEffect","useState","useQuery","QUERY_SCORES","ScoreList","TEST_WALLETS","wallet","score","TacticMenu","walletAddress","setWalletAddress","loading","data","scores","console","log","checkIfWalletIsConnected","solana","window","isPhantom","response","connect","onlyIfTrusted","publicKey","toString","alert","error","connectWallet","renderNotConnectedContainer","renderConnectedButton","width","renderConnectedWallet","renderHighScoresContainer","map","onLoad","addEventListener","removeEventListener","display","alignItems","justifyContent","flexDirection","height"],"sources":["/Users/stephenkelly/chessrush/client/src/components/TacticMenu.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useQuery } from '@apollo/client';\nimport { QUERY_SCORES } from \"../utils/queries\";\nimport ScoreList from '../components/ScoreList';\n\nconst TEST_WALLETS = [\n  { wallet: \"asparagus\", score: \"vegetables\" },\n  { wallet: \"asparagus\", score: \"vegetables\" },\n  { wallet: \"asparagus\", score: \"vegetables\" },\n  { wallet: \"asparagus\", score: \"vegetables\" },\n  { wallet: \"asparagus\", score: \"vegetables\" },\n];\n\nconst TacticMenu = () => {\n  // State\n  const [walletAddress, setWalletAddress] = useState(null);\n\n  const { loading, data } = useQuery(QUERY_SCORES);\n  const scores = data?.scores || [];\n\n  console.log(scores);\n\n  // Actions\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const { solana } = window;\n\n      if (solana) {\n        if (solana.isPhantom) {\n          console.log(\"Phantom wallet found!\");\n          const response = await solana.connect({ onlyIfTrusted: true });\n          console.log(\n            \"Connected with Public Key:\",\n            response.publicKey.toString()\n          );\n\n          /*\n           * Set the user's publicKey in state to be used later!\n           */\n          setWalletAddress(response.publicKey.toString());\n        }\n      } else {\n        alert(\"Solana object not found! Get a Phantom Wallet ðŸ‘»\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const connectWallet = async () => {\n    const { solana } = window;\n\n    if (solana) {\n      const response = await solana.connect();\n      console.log(\"Connected with Public Key:\", response.publicKey.toString());\n      setWalletAddress(response.publicKey.toString());\n    }\n  };\n\n  const renderNotConnectedContainer = () => (\n    <button\n      className=\"cta-button connect-wallet-button\"\n      onClick={connectWallet}\n    >\n      Connect to Wallet\n    </button>\n  );\n\n  const renderConnectedButton = () => (\n    <a style={{ width: \"30%\" }} className=\"btn btn-primary\" href=\"/beginner\">\n      Start\n    </a>\n  );\n\n  const renderConnectedWallet = () => (\n    <h4 className=\"connectedWallet\">Connected Wallet : {walletAddress}</h4>\n  );\n\n  const renderHighScoresContainer = () => (\n    <div className=\"gif-grid\">\n      {TEST_WALLETS.map((wallet) => (\n        <div className=\"gif-item\" key={wallet}>\n          <p>{wallet.wallet}</p>\n          <p>{wallet.score}</p>\n        </div>\n      ))}\n    </div>\n  );\n\n  // UseEffects\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n    };\n    window.addEventListener(\"load\", onLoad);\n    return () => window.removeEventListener(\"load\", onLoad);\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"inline\",\n        height: \"80vh\",\n      }}\n    >\n      <div className=\"Intro\">\n        <h1 className=\"introText\">Puzzle Rush</h1>\n\n        {!walletAddress && renderNotConnectedContainer()}\n        {walletAddress && renderConnectedButton()}\n        {walletAddress && renderConnectedWallet()}\n      </div>\n\n      <div className=\"Intro2\">\n      <ScoreList\n              scores={scores}\n              title=\"Some Feed for Thought(s)...\"\n            />\n      </div>\n    </div>\n  );\n};\n\nexport default TacticMenu;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}