{"ast":null,"code":"var _jsxFileName = \"/Users/stephenkelly/chessrush/client/src/components/HomeMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./css/HomePage.css\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_SCORES } from \"../utils/queries\";\nimport ScoreList from \"../components/ScoreList\";\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomeMenu = () => {\n  _s();\n\n  // State\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [formState, setFormState] = useState({\n    wallet: \"\"\n  });\n  console.log(formState);\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_SCORES);\n  const scores = (data === null || data === void 0 ? void 0 : data.scores) || [];\n  const [addUser, {\n    error\n  }] = useMutation(ADD_USER); // Actions\n  // const checkIfWalletIsConnected = async () => {\n  //   try {\n  //     const { solana } = window;\n  //     if (solana) {\n  //       if (solana.isPhantom) {\n  //         console.log(\"Phantom wallet found!\");\n  //         const response = await solana.connect({ onlyIfTrusted: true });\n  //         console.log(\n  //           \"Connected with Public Key:\",\n  //           response.publicKey.toString()\n  //         );\n  //         /*\n  //          * Set the user's publicKey in state to be used later!\n  //          */\n  //         setWalletAddress(response.publicKey.toString());\n  //       }\n  //     } else {\n  //       alert(\"Solana object not found! Get a Phantom Wallet ðŸ‘»\");\n  //     }\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n  const connectWallet = async () => {\n    const {\n      solana\n    } = window;\n\n    if (solana) {\n      const response = await solana.connect();\n      console.log(\"Connected with Public Key:\", response.publicKey.toString());\n      const x = response.publicKey.toString();\n      console.log(x);\n      const wallet1 = \"wallet\";\n      setFormState({ ...formState,\n        [wallet1]: x\n      });\n      console.log(formState);\n      setWalletAddress(response.publicKey.toString());\n      createPlayer(x);\n    }\n  };\n\n  const createPlayer = async x => {\n    console.log(x);\n    const adding = {\n      \"wallet\": x\n    };\n    console.log(adding);\n\n    try {\n      const {\n        data\n      } = await addUser({\n        variables: { ...x\n        }\n      });\n      console.log(\"username created\", data);\n    } catch (err) {\n      if (err) throw err.message;\n      console.log(err.message);\n    }\n  };\n\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"cta-button connect-wallet-button\",\n    onClick: connectWallet,\n    children: \"Connect to Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n\n  const renderConnectedButton = () => /*#__PURE__*/_jsxDEV(\"a\", {\n    className: \"  btn1 \",\n    href: \"/play\",\n    children: \"Launch App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this); // UseEffects\n  // useEffect(() => {\n  //   const onLoad = async () => {\n  //     await checkIfWalletIsConnected();\n  //   };\n  //   window.addEventListener(\"load\", onLoad);\n  //   return () => window.removeEventListener(\"load\", onLoad);\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"herofeature\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Solana Chess\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Currently under production\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"herofeature\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Play Puzzle Rush Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), !walletAddress && renderNotConnectedContainer(), walletAddress && renderConnectedButton()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"features\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feature\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Roadmap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(ScoreList, {\n        scores: scores\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomeMenu, \"fBGF1PQNGRTSw/vdSCXrVQXm8iA=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = HomeMenu;\nexport default HomeMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeMenu\");","map":{"version":3,"names":["React","useEffect","useState","useQuery","QUERY_SCORES","ScoreList","useMutation","ADD_USER","HomeMenu","walletAddress","setWalletAddress","formState","setFormState","wallet","console","log","loading","data","scores","addUser","error","connectWallet","solana","window","response","connect","publicKey","toString","x","wallet1","createPlayer","adding","variables","err","message","renderNotConnectedContainer","renderConnectedButton"],"sources":["/Users/stephenkelly/chessrush/client/src/components/HomeMenu.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./css/HomePage.css\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_SCORES } from \"../utils/queries\";\nimport ScoreList from \"../components/ScoreList\";\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nconst HomeMenu = () => {\n  // State\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [formState, setFormState] = useState({ wallet: \"\" });\n  console.log(formState);\n  \n\n  const { loading, data } = useQuery(QUERY_SCORES);\n  const scores = data?.scores || [];\n\n\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  // Actions\n  // const checkIfWalletIsConnected = async () => {\n  //   try {\n  //     const { solana } = window;\n\n  //     if (solana) {\n  //       if (solana.isPhantom) {\n  //         console.log(\"Phantom wallet found!\");\n  //         const response = await solana.connect({ onlyIfTrusted: true });\n  //         console.log(\n  //           \"Connected with Public Key:\",\n  //           response.publicKey.toString()\n  //         );\n\n  //         /*\n  //          * Set the user's publicKey in state to be used later!\n  //          */\n  //         setWalletAddress(response.publicKey.toString());\n         \n  //       }\n  //     } else {\n  //       alert(\"Solana object not found! Get a Phantom Wallet ðŸ‘»\");\n  //     }\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n  const connectWallet = async () => {\n    const { solana } = window;\n\n    if (solana) {\n      const response = await solana.connect();\n      console.log(\"Connected with Public Key:\", response.publicKey.toString());\n      const x = response.publicKey.toString();\n\n      console.log(x);\n\n      const wallet1 = \"wallet\";\n\n      setFormState({\n        ...formState,\n        [wallet1]: x,\n      });\n      console.log(formState);\n      setWalletAddress(response.publicKey.toString());\n       createPlayer(x);\n    }\n    \n  };\n\n  const createPlayer = async (x) => {\n    console.log(x);\n\n    const adding = {\"wallet\":x}\n\n    console.log(adding);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...x },\n      });\n      console.log(\"username created\", data);\n    } catch (err) {\n      if (err) throw err.message;\n      console.log(err.message);\n    }\n  };\n\n\n  const renderNotConnectedContainer = () => (\n    <button\n      className=\"cta-button connect-wallet-button\"\n      onClick={connectWallet}\n    >\n      Connect to Wallet\n    </button>\n  );\n\n  const renderConnectedButton = () => (\n    <a className=\"  btn1 \" href=\"/play\">\n      Launch App\n    </a>\n  );\n\n  // UseEffects\n  // useEffect(() => {\n  //   const onLoad = async () => {\n  //     await checkIfWalletIsConnected();\n  //   };\n  //   window.addEventListener(\"load\", onLoad);\n  //   return () => window.removeEventListener(\"load\", onLoad);\n  // }, []);\n\n  return (\n    <div className=\"body\">\n      <div className=\"hero\">\n        <div className=\"herofeature\">\n          <h1>Solana Chess</h1>\n          <h4>Currently under production</h4>\n        </div>\n        <div className=\"herofeature\">\n          <h1>Play Puzzle Rush Now</h1>\n          {!walletAddress && renderNotConnectedContainer()}\n          {walletAddress && renderConnectedButton()}\n        </div>\n      </div>\n      <div className=\"features\">\n        <div className=\"feature\">\n          <h1> Roadmap</h1>\n        </div>\n\n        {loading ? <div>Loading...</div> : <ScoreList scores={scores} />}\n      </div>\n    </div>\n  );\n};\n\nexport default HomeMenu;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}