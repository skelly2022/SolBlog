[{"/Users/stephenkelly/chessrush/client/src/index.js":"1","/Users/stephenkelly/chessrush/client/src/App.js":"2","/Users/stephenkelly/chessrush/client/src/reportWebVitals.js":"3","/Users/stephenkelly/chessrush/client/src/utils/GameContext.js":"4","/Users/stephenkelly/chessrush/client/src/components/TacticMenu.js":"5","/Users/stephenkelly/chessrush/client/src/components/TacticSession.js":"6","/Users/stephenkelly/chessrush/client/src/components/sub/NavBar.js":"7","/Users/stephenkelly/chessrush/client/src/components/sub/Footer.js":"8","/Users/stephenkelly/chessrush/client/src/utils/chessTactics.js":"9","/Users/stephenkelly/chessrush/client/src/utils/queries.js":"10","/Users/stephenkelly/chessrush/client/src/components/Timer.js":"11","/Users/stephenkelly/chessrush/client/src/components/TacticBoard.js":"12","/Users/stephenkelly/chessrush/client/src/components/ScoreList/index.js":"13"},{"size":760,"mtime":1662051040150,"results":"14","hashOfConfig":"15"},{"size":985,"mtime":1664302032208,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1662051040150,"results":"17","hashOfConfig":"15"},{"size":1021,"mtime":1662051040150,"results":"18","hashOfConfig":"15"},{"size":2791,"mtime":1664302382997,"results":"19","hashOfConfig":"15"},{"size":6543,"mtime":1662143857769,"results":"20","hashOfConfig":"15"},{"size":158,"mtime":1662143520025,"results":"21","hashOfConfig":"15"},{"size":167,"mtime":1662144269336,"results":"22","hashOfConfig":"15"},{"size":1478,"mtime":1662051040151,"results":"23","hashOfConfig":"15"},{"size":173,"mtime":1664300764872,"results":"24","hashOfConfig":"15"},{"size":1283,"mtime":1662051040150,"results":"25","hashOfConfig":"15"},{"size":4081,"mtime":1662143796784,"results":"26","hashOfConfig":"15"},{"size":279,"mtime":1664301681379,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1apu00",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"/Users/stephenkelly/chessrush/client/src/index.js",[],[],"/Users/stephenkelly/chessrush/client/src/App.js",["70"],[],"import TacticMenu from \"./components/TacticMenu\";\nimport TacticSession from \"./components/TacticSession\";\n// import { Routes, Route, Router  } from \"react-router-dom\";\nimport Navbar from \"./components/sub/NavBar\";\nimport Footer from \"./components/sub/Footer\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  let Component;\n\n  switch (window.location.pathname) {\n    case \"/\":\n      Component = TacticMenu;\n      break;\n    case \"/beginner\":\n      Component = TacticSession;\n      break;\n  }\n\n  return (\n    <ApolloProvider client={client}>\n      <Navbar />\n      <Component />\n      <Footer />\n    </ApolloProvider>\n  );\n  // return (\n\n  //   <Routes>\n  //     <>\n  //       <Route path=\"/\" element={<TacticMenu />} />\n  //       <Route path=\"/beginner\" element={<TacticSession />} />\n  //     </>\n  //   </Routes>\n\n  // );\n}\n\nexport default App;\n","/Users/stephenkelly/chessrush/client/src/reportWebVitals.js",[],[],"/Users/stephenkelly/chessrush/client/src/utils/GameContext.js",[],[],"/Users/stephenkelly/chessrush/client/src/components/TacticMenu.js",[],[],"/Users/stephenkelly/chessrush/client/src/components/TacticSession.js",["71"],[],"import React, { useState, useEffect } from \"react\";\nimport { useGameState, useGameUpdateState } from \"../utils/GameContext\";\nimport { Container, Modal, Col, Card, ListGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport TacticBoard from \"./TacticBoard\";\nimport chessmove from \"../audio/chessmove.wav\";\nimport solve from \"../audio/puzzle solve.wav\";\nimport wrongmove from \"../audio/incorrect move.wav\";\nimport axios from \"axios\";\nimport Timer from \"./Timer\";\nimport { getSideToPlayFromFen } from \"../utils/chessTactics\";\n\nconst TacticSession = () => {\n  const [chessboardSize, setChessboardSize] = useState(undefined);\n  const [score, SetScore] = useState(0);\n  const [key, setKey] = useState(Date.now());\n  const [tactic, setTactic] = useState({});\n  const { show } = useGameState();\n  const { updateShow } = useGameUpdateState();\n  const { gameOver } = useGameState();\n  const { updateGameOver } = useGameUpdateState();\n  const { reset } = useGameUpdateState();\n  const [loading, setLoading] = useState(true);\n\n\n  const [walletAddress, setWalletAddress] = useState(null);\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const { solana } = window;\n\n      if (solana) {\n        if (solana.isPhantom) {\n          console.log('Phantom wallet found!');\n          const response = await solana.connect({ onlyIfTrusted: true });\n          console.log(\n            'Connected with Public Key:',\n            response.publicKey.toString()\n          );\n\n          /*\n           * Set the user's publicKey in state to be used later!\n           */\n          setWalletAddress(response.publicKey.toString());\n        }\n      } else {\n        alert('Solana object not found! Get a Phantom Wallet ðŸ‘»');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n  async function getPuzzle() {\n    let data = await axios(\"https://chess-puzzle-server.herokuapp.com/\").then(\n      (data) => {\n        const payload = data.data;\n        console.log(payload);\n\n        return payload;\n      }\n    );\n\n    setTactic(data);\n\n    setInterval(() => {\n      setLoading(false);\n    }, 3000);\n  }\n\n  useEffect(() => {\n    getPuzzle();\n  }, []);\n\n  useEffect(() => {\n    if (!loading) {\n      function handleResize() {\n        const display = document.getElementsByClassName(\"container\")[0];\n        const displayDiv = display.getElementsByTagName(\"div\")[0];\n        const chessBoardContainer = displayDiv.getElementsByTagName(\"div\")[0];\n\n        chessBoardContainer.setAttribute(\n          \"style\",\n          \"position: relative; display: flex; align-items: center; justify-content: center;\"\n        );\n\n        if (display.offsetWidth >= 1140) {\n          setChessboardSize(display.offsetWidth * 0.59);\n        }\n\n        if (display.offsetWidth >= 960 && display.offsetWidth < 1140) {\n          setChessboardSize(display.offsetWidth * 0.69);\n        }\n\n        if (display.offsetWidth >= 720 && display.offsetWidth < 960) {\n          setChessboardSize(display.offsetWidth * 0.82);\n        }\n\n        if (display.offsetWidth >= 720 && display.offsetWidth < 960) {\n          setChessboardSize(display.offsetWidth * 0.8);\n        }\n\n        if (display.offsetWidth <= 540) {\n          setChessboardSize(display.offsetWidth);\n        }\n      }\n\n      window.addEventListener(\"resize\", handleResize);\n      handleResize();\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }\n  }, [loading]);\n\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n    };\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n\n  async function solutionFunction() {\n    let audio = new Audio(solve);\n    audio.play();\n    setTimeout(() => {\n      audio.pause();\n    }, 800);\n    SetScore(score + 1);\n    await getPuzzle();\n    setKey(Date.now());\n  }\n\n  async function correctFunction() {\n    let audio = new Audio(chessmove);\n    audio.play();\n    setTimeout(() => {\n      audio.pause();\n    }, 200);\n  }\n\n  async function incorrectFunction() {\n    let audio = new Audio(wrongmove);\n    audio.play();\n    setTimeout(() => {\n      audio.pause();\n    }, 1000);\n    updateGameOver();\n    updateShow();\n  }\n\n  return (\n    <>\n      {loading ? (\n        <div className=\"loader-wrapper\">\n          <div className=\"loader\">\n            <div className=\"loader loader-inner\"></div>\n          </div>\n        </div>\n      ) : (\n        <>\n          <Container className=\"mainContainer\">\n            <Col className=\"chessBody\">\n              <Container className=\"chessContainer\">\n                <TacticBoard\n                  key={key}\n                  tactic={tactic}\n                  boardWidth={chessboardSize}\n                  onCorrect={correctFunction}\n                  onIncorrect={incorrectFunction}\n                  onSolve={solutionFunction}\n                />\n              </Container>\n            </Col>\n\n            {!gameOver && (\n              <Col className=\"chessHeader\">\n                <Card className=\"cardShadow\">\n                  <ListGroup>\n                    <ListGroup.Item>\n                      <Timer time={{ hours: 0, minutes: 5, seconds: 0 }} />\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <div style={{ textAlign: \"center\" }}>\n                        <h2>Score: {score}</h2>\n                        <h4>\n                          {getSideToPlayFromFen(tactic.fen) === \"b\"\n                            ? \"White to Play\"\n                            : \"Black to Play\"}\n                        </h4>\n                      </div>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Card>\n              </Col>\n            )}\n\n            <Modal\n              show={show}\n              onHide={updateShow}\n              backdrop=\"static\"\n              keyboard={false}\n              centered\n            >\n              <Modal.Header>\n                <Modal.Title style={{ margin: \"auto\", fontSize: \"2.5rem\" }}>\n                  Game Over!\n                </Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <h2>Score: {score}</h2>\n              </Modal.Body>\n              <Modal.Footer>\n                <Link onClick={reset} className=\"btn btn-primary\" to=\"/\">\n                  Return to menu\n                </Link>\n              </Modal.Footer>\n            </Modal>\n          </Container>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default TacticSession;\n","/Users/stephenkelly/chessrush/client/src/components/sub/NavBar.js",[],[],"/Users/stephenkelly/chessrush/client/src/components/sub/Footer.js",[],[],"/Users/stephenkelly/chessrush/client/src/utils/chessTactics.js",[],[],"/Users/stephenkelly/chessrush/client/src/utils/queries.js",[],[],"/Users/stephenkelly/chessrush/client/src/components/Timer.js",[],[],"/Users/stephenkelly/chessrush/client/src/components/TacticBoard.js",[],[],"/Users/stephenkelly/chessrush/client/src/components/ScoreList/index.js",[],[],[],{"ruleId":"72","severity":1,"message":"73","line":16,"column":3,"nodeType":"74","messageId":"75","endLine":23,"endColumn":4},{"ruleId":"76","severity":1,"message":"77","line":26,"column":10,"nodeType":"78","messageId":"79","endLine":26,"endColumn":23},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'walletAddress' is assigned a value but never used.","Identifier","unusedVar"]